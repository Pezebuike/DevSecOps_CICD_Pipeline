name: Build

on: 
 workflow_call:

jobs:
  build:
    runs-on: java_build # This job runs on the java_build runner with self hosted runner 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Cache Maven Dependencies # This step caches the Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build with Maven # This step builds the project using Maven
        run: mvn clean install

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: target/*.jar
        
    #   - name: Configure JFrog CLI
    # token 
    #     run: |
    #         jfrog config add my-artifactory --url=https://trial42aeja.jfrog.io --apikey=${{ secrets.JFROG_TOKEN }}
      - name: Configure JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        with:
          version: latest
        env:
          JF_URL: https://trialp9y8bu.jfrog.io
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}
      - name: Upload JAR to JFrog
        run: |
           sudo jf rt u "target/*.jar" "petjfrog-repo/"     name: Build

# on: 
#  workflow_call:

# jobs:
#   build:
#     runs-on: java_build
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#           cache: maven

#       - name: Cache Maven Dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.m2/repository
#           key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

#       - name: Build with Maven
#         run: mvn clean install

#       - name: Upload Build Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: jar
#           path: target/*.jar
        
#     #   - name: Configure JFrog CLI
#     # token 
#     #     run: |
#     #         jfrog config add my-artifactory --url=https://trial42aeja.jfrog.io --apikey=${{ secrets.JFROG_TOKEN }}
#       - name: Configure JFrog CLI
#         uses: jfrog/setup-jfrog-cli@v3
#         with:
#           version: latest
#         env:
#           JF_URL: https://trialp9y8bu.jfrog.io
#           JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}
#       - name: Upload JAR to JFrog
#         run: |
#            sudo jf rt u "target/*.jar" "petjfrog-repo/"     

# name: Build and Upload to JFrog

# on:
#   workflow_call:

# permissions: 
#   id-token: write
#   contents: read

# jobs:
#   build-and-upload:
#     runs-on: ubuntu-latest # This job runs on the latest version of Ubuntu
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up JDK 17 # This step sets up JDK 17 
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'adopt'
#           java-version: '17'
#           cache: 'maven'

#       - name: Build with Maven # This step builds the project using Maven
#         run: mvn clean install -DskipTests=true

#       - name: Upload Build Artifact # This step uploads the build artifact to the workflow
#         uses: actions/upload-artifact@v3
#         with:
#           name: jar
#           path: target/*.jar

#       - name: Setup JFrog CLI # This step sets up the JFrog CLI
#         uses: jfrog/setup-jfrog-cli@v4
#         with:
#           oidc-provider-name: github-jfrog
#           oidc-audience: my-aud
#           version: 2.73.0
#         env:
#           JAVA_HOME: /home/ubuntu/actions-runner/_work/_tool/Java_Adopt_jdk/17.0.13-11/x64 # This is the path to the JDK 17 installation
#           JAVA_HOME_17_X64: /home/ubuntu/actions-runner/_work/_tool/Java_Adopt_jdk/17.0.13-11/x64 # This is the path to the JDK 17 installation
#           JF_URL: ${{ secrets.JFROG_URL }} # This is the JFrog URL

#       - name: Configure JFrog CLI # This step configures the JFrog CLI
#         run: |
#           jf c add --url=${{ secrets.JFROG_URL }} --access-token=${{ secrets.JFROG_TOKEN }} --interactive=false
#         env:
#           CI: true
#           JFROG_URL: ${{ secrets.JFROG_URL }}
#           JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}

#       - name: Upload JAR to JFrog
#         run: |
#           jf rt u "target/*.jar" "petjfrog-repo/"
#         env:
#           CI: true

#       - name: Enable Debug Logs (Optional for Troubleshooting)
#         if: ${{ failure() }}
#         run: |
#           export JFROG_CLI_LOG_LEVEL=DEBUG
#           echo "Debug logs enabled"


# name: Build

# on:
#   workflow_call:
#      # inputs:
#      #   workflow_id:
#      #     - "Build"
#      #   action_id:
#      #     - "javabuild"

# permissions: 
#   id-token: write
   

# jobs:
#   build-and-upload:
#     runs-on: java_build
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'adopt'
#           java-version: '17'
#           cache: 'maven'

#       - name: Cache Maven Dependencies
#         uses: actions/cache@v4
#         with:
#           path: ~/.m2/repository
#           key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

#       - name: Build with Maven
#         run: mvn clean install -DskipTests=true

#       - name: Upload Build Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: jar
#           path: target/*.jar

#       - name: Setup JFrog CLI
#         uses: jfrog/setup-jfrog-cli@v4
#         env:
#           JFROG_url: ${{ secrets.JFROG_URL }}        
#         with:
#           oidc-provider-name: github-jfrog
#           oidc-audience: my-aud

      
#       # - name: Configure JFrog CLI
#       #   env:
#       #     CI: true # Suppress interactive prompts
#       #     JFROG_URL: ${{ secrets.JFROG_URL }}
#       #     JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
#       #   run: |
#       #     jf c add --url=${{secrets.JFROG_URL}} --access-token=${{secrets.JFROG_TOKEN}} --interactive=false
         

#       - name: Upload JAR to JFrog
#         env:
#           CI: true # Suppress interactive prompts
#         run: |
#           jf rt u "target/*.jar" "petjfrog-repo/"
            

